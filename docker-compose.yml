version: "3.8"

services:
    app:
        build:
            args:
                user: php_mysql_env
                uid: 1000
            context: .
            dockerfile: docker/app.dockerfile
        image: php_mysql_env-app
        container_name: php_mysql_env-app
        extra_hosts:
            - "host.docker.internal:host-gateway"
        restart: unless-stopped
        depends_on:
            - db
        #      - redisinsight
        volumes:
            - .:/var/www/html:delegated
            - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
        networks:
            - php_mysql_env-net

    nginx:
        image: nginx:1.17-alpine
        container_name: php_mysql_env-nginx
        restart: unless-stopped
        ports:
            - '${WEB_SERVER_PORT:-8080}:80'
        volumes:
            - .:/var/www/html
            - ./docker/nginx:/etc/nginx/conf.d
        networks:
            - php_mysql_env-net

    db:
        image: 'mysql:8.0'
        container_name: php_mysql_env-db
        restart: unless-stopped
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'php_mysql_env-mysql:/var/lib/mysql'
        networks:
            - php_mysql_env-net

#  queue:
#    image: rabbitmq:3-management-alpine
#    container_name: php_mysql_env-queue
#    healthcheck:
#      test: rabbitmq-diagnostics -q ping
#    ports:
#      - '5672:5672'
#      - '15672:15672'
#    networks:
#      - php_mysql_env-net

#  redis:
#    image: redis:7.0-rc2
#    container_name: php_mysql_env-redis
#    volumes:
#      - 'php_mysql_env-redis:/data'
#    ports:
#      - '${FORWARD_REDIS_PORT:-6379}:6379'
#    networks:
#      - php_mysql_env-net

#  redisinsight:
#    image: redislabs/redisinsight:1.11.1
#    container_name: php_mysql_env-redisinsight
#    depends_on:
#      - redis
#    ports:
#      - '8001:8001'
#    networks:
#      - php_mysql_env-net

networks:
    php_mysql_env-net:
        driver: bridge

volumes:
    php_mysql_env-mysql:
        driver: local
#  php_mysql_env-redis:
#    driver: local
